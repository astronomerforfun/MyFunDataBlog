ggplot(aes(format, n, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
#Look at the diamonds data set
names(mpg)
mpg%>%
group_by(class)%>%
summarise(n = n())%>%
# mutate(ToHighlight = ifelse(n > , "yes", "no"))%>%
ggplot(aes(format, n)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
mpg%>%
group_by(class)%>%
summarise(n = n())%>%
# mutate(ToHighlight = ifelse(n > , "yes", "no"))%>%
ggplot(aes(class, n)) + geom_col()+coord_flip()
mpg%>%
group_by(class)%>%
summarise(n = n())%>%
mutate(ToHighlight = ifelse(n > 40 , "yes", "no"))%>%
ggplot(aes(class, n)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
mpg%>%
group_by(class)%>%
summarise(n = n())%>%
mutate(ToHighlight = ifelse(n > 30 , "yes", "no"))%>%
ggplot(aes(class, n)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
library(RColorBrewer)
mpg%>%
group_by(class)%>%
summarise(n = n())%>%
mutate(ToHighlight = ifelse(n > 30 , "yes", "no"))%>%
ggplot(aes(class, n)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
library(RColorBrewer)
mpg%>%
group_by(class)%>%
summarise(n = n())%>%
mutate(ToHighlight = ifelse(n > 30 , "yes", "no"))%>%
ggplot(aes(class, n, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
mpg%>%
group_by(class)%>%
summarise(n = n())%>%
mutate(ToHighlight = ifelse(n > 60 , "yes", "no"))%>%
ggplot(aes(class, n, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
summarise(mean_mpg_cty = mean(mpg$cty)%>%
mutate(ToHighlight = ifelse(mean_mpg_cty > 60 , "yes", "no"))%>%
mpg%>%
group_by(class)%>%
summarise(mean_mpg_cty = mean(mpg$cty)%>%
mutate(ToHighlight = ifelse(mean_mpg_cty > 10 , "yes", "no"))%>%
ggplot(aes(class, mean_mpg_cty, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
>
<
mpg%>%
group_by(class)%>%
summarise(mean_mpg_cty = mean(mpg$cty)%>%
mutate(ToHighlight = ifelse(mean_mpg_cty > 10 , "yes", "no"))%>%
ggplot(aes(class, mean_mpg_cty, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
<
>
mpg%>%
group_by(class)%>%
summarise(mean_mpg_cty = mean(mpg$cty))%>%
mutate(ToHighlight = ifelse(mean_mpg_cty > 10 , "yes", "no"))%>%
ggplot(aes(class, mean_mpg_cty, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
mpg%>%
group_by(class)%>%
summarise(mean_mpg_cty = mean(mpg$cty))%>%
mutate(ToHighlight = ifelse(mean_mpg_cty > 15 , "yes", "no"))%>%
ggplot(aes(class, mean_mpg_cty, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
mpg%>%
group_by(class)%>%
summarise(mean_mpg_cty = mean(cty))%>%
mutate(ToHighlight = ifelse(mean_mpg_cty > 15 , "yes", "no"))%>%
ggplot(aes(class, mean_mpg_cty, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
mpg%>%
group_by(class)%>%
summarise(mean_mpg_cty = mean(cty))%>%
mutate(ToHighlight = ifelse(mean_mpg_cty > 18 , "yes", "no"))%>%
ggplot(aes(class, mean_mpg_cty, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Book Format had the most Reviews?",
subtitle = "Number of Reviews per Book Type for James Comey's \'A Higher Loyalty\'",
caption = "Source: Amazon.com",
x = "Format",
y = "Number of Reviews")  +
theme(plot.title = element_text(family ='', face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
?mpg
?element_text
mpg%>%
group_by(class)%>%
summarise(mean_mpg_cty = mean(cty))%>%
mutate(ToHighlight = ifelse(mean_mpg_cty > 18 , "yes", "no"))%>%
ggplot(aes(class, mean_mpg_cty, fill = ToHighlight)) + geom_col()+coord_flip()+
theme_classic() + scale_fill_manual(values = c("yes" ="#F0E442", "no" = "#0072B2"), guide = F) +
labs(title = "Which Class of Car Has the Best City MPG?",
subtitle = "Average City MPG by Class",
caption = "Source: EPA",
x = "City Miles Per Gallon",
y = "Class of Car")  +
theme(plot.title = element_text(face = 'bold', colour = 'black', size = 18),
plot.subtitle = element_text(family ='', face = 'italic', colour = 'black', size = 10),
plot.caption = element_text(family ='', colour = 'black', size = 10),
axis.title.x = element_text(family ='', colour = 'black', size = 12),
axis.title.y = element_text(family ='', colour = 'black', size = 12),
axis.line = element_line(size = 1, colour = "dark grey"))
library(rvest)
library(dplyr)
library(xml2)
series <- read_html("https://en.wikipedia.org/wiki/World_Series")
series%>%
html_table(fill = T)
data <- series%>%
html_table(fill = T)
data[[2]]
data[[4]]
data[[3]]
data[[1]]
data
data <- series%>%
html_nodes("td:nth-child(1)")%>%
html_table(fill = T)
data <- series%>%
html_nodes("td:nth-child(1)")%>%
html_table()
data <- series%>%
html_nodes("td:nth-child(1)")%>%
html_table(fill = F)
data <- series%>%
html_nodes("td:nth-child(1)")%>%
html_table(fill = T)
data <- series%>%
# html_nodes("td:nth-child(1)")%>%
html_table(fill = T)
data
unlist(data)
data <- series%>%
html_nodes("#mw-content-text > div > div:nth-child(101) > table > tbody > tr > td:nth-child(1)")%>%
html_table(fill = T)
data <- series%>%
html_nodes("#mw-content-text > div > div:nth-child(101) > table > tbody > tr > td:nth-child(1)")%>%
html_table(fill = T)
data <- series%>%
html_node("#mw-content-text > div > div:nth-child(101) > table > tbody > tr > td:nth-child(1)")%>%
html_table(fill = T)
data
library(ggplot2)
library(dplyr)
diamonds
name: "my-website"
navbar:
title: "My Website"
left:
- text: "Home"
href: index.html
- text: "About"
href: about.html
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
install.packages("rmarkdown")
library(rmarkdown)
install.packages("kerasR")
install.packages("keras")
library(keras)
library(keras)
install_keras()
install.packages("tensorflow")
library(keras)
install_keras()
library(keras)
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
x_train <- array_reshape(x_train, c(nrow(x_train), 784))
x_test <- array_reshape(x_test, c(nrow(x_test), 784))
# rescale
x_train <- x_train / 255
x_test <- x_test / 255
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
summary(model)
model %>% compile(
loss = 'categorical_crossentropy',
optimizer = optimizer_rmsprop(),
metrics = c('accuracy')
)
history <- model %>% fit(
x_train, y_train,
epochs = 30, batch_size = 128,
validation_split = 0.2
)
plot(history)
model %>% evaluate(x_test, y_test)
model %>% predict_classes(x_test)
class(x_train)
View(x_train)
head(x_train)
install.packages("tfestimators")
library(tfestimators)
install_tensorflow()
mtcars_input_fn <- function(data, num_epochs = 1) {
input_fn(data,
features = c("disp", "cyl"),
response = "mpg",
batch_size = 32,
num_epochs = num_epochs)
}
cols <- feature_columns(
column_numeric("disp"),
column_numeric("cyl")
)
cols <- feature_columns(
column_numeric("disp", "cyl")
)
model <- linear_regressor(feature_columns = cols)
indices <- sample(1:nrow(mtcars), size = 0.80 * nrow(mtcars))
train <- mtcars[indices, ]
test  <- mtcars[-indices, ]
# train the model
model %>% train(mtcars_input_fn(train, num_epochs = 10))
model %>% evaluate(mtcars_input_fn(test))
# train the model
model %>% train(mtcars_input_fn(train, num_epochs = 10))
model %>% predict(mtcars_input_fn(obs))
mtcars_input_fn <- function(data, num_epochs = 1) {
input_fn(data,
features = c("disp", "cyl"),
response = "mpg",
batch_size = 32,
num_epochs = num_epochs)
}
cols <- feature_columns(
column_numeric("disp"),
column_numeric("cyl")
)
cols <- feature_columns(
column_numeric("disp", "cyl")
)
model <- linear_regressor(feature_columns = cols)
indices <- sample(1:nrow(mtcars), size = 0.80 * nrow(mtcars))
train <- mtcars[indices, ]
test  <- mtcars[-indices, ]
# train the model
model %>% train(mtcars_input_fn(train, num_epochs = 10))
model %>% evaluate(mtcars_input_fn(test))
obs <- mtcars[1:3, ]
model %>% predict(mtcars_input_fn(obs))
saved_model_dir <- model_dir(model)
cols <- feature_columns(
column_numeric("disp", "cyl")
)
loaded_model <- linear_regressor(feature_columns = cols,
model_dir = saved_model_dir)
loaded_model
loaded_model
mushroom
library(datasets)
mushroom
mushrooms
Mushroom
data(Mushroom)
data(mushroom)
install.packages("arules")
library(arules)
data("Mushroom")
View(Mushroom)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
df <- data("Mushroom")
str(df)
df <- as.data.frame(df)
View(df)
Mushroom
df <- Mushroom
df <- as.data.frame(Mushroom)
?mushrooms
??mushrooms
library(FFTrees)
mushrooms
df <- mushrooms
str(df)
head(df)
set.seed(100) # For replicability of the training / test data split
mushrooms.fft <- FFTrees(formula = poisonous ~.,
data = mushrooms,
train.p = .5,      # Split data into 50\50 training \ test
main = "Mushrooms",
decision.labels = c("Safe", "Poison"))
rows <- sample(nrow(mushroom), nrow(mushroom) *.5, replace = F)
rows <- sample(nrow(mushrooms), nrow(mushrooms) *.5, replace = F)
train <- mushrooms[rows,]
test <- mustrooms[-rows,]
rows <- sample(nrow(mushrooms), nrow(mushrooms) *.5, replace = F)
train <- mushrooms[rows,]
test <- mushrooms[-rows,]
model <- FFTrees(poisonous ~ ., mushrooms)
rows <- sample(nrow(mushrooms), nrow(mushrooms) *.5, replace = F)
train <- mushrooms[rows,]
test <- mushrooms[-rows,]
model <- FFTrees(poisonous ~ ., train)
predict(model, test)
pred <- predict(model, test)
plot(model)
plot(mushrooms.fft)
library(FFTrees)
library(ggplot2)
df <- mushrooms
ggplot(df, aes(poisonous)) + geom_bar()
ggplot(df, aes(poisonous)) + geom_bar(col = "green")
ggplot(df, aes(poisonous)) + geom_bar(fil = "green")
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar()
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_color_brewer(palette="Dark2")
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2")
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "Count", y = "", caption = "Mushroom Data Set", subtitle = "How many are Poisonous?")
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "Count", y = "", caption = "Mushroom Data Set", subtitle = "How many are Poisonous?") + theme(plot.title = element_text(size = 20, face = "bold", family = "mono", hjust = .5), plot.subtitle = element_text(size = 15, face = "italics", family = "mono", hjust = .5))
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "Count", y = "", caption = "Mushroom Data Set", subtitle = "How many are Poisonous?") + theme(plot.title = element_text(size = 20, face = "bold", family = "mono", hjust = .5), plot.subtitle = element_text(size = 15, face = "", family = "mono", hjust = .5))
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "Count", y = "", caption = "Mushroom Data Set", subtitle = "How many are Poisonous?") + theme(plot.title = element_text(size = 20, face = "bold", family = "mono", hjust = .5), plot.subtitle = element_text(size = 15, family = "mono", hjust = .5))
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "Count", y = "", caption = "Mushroom Data Set", subtitle = "How many are Poisonous?") + theme(plot.title = element_text(size = 16, face = "bold", family = "mono", hjust = .5), plot.subtitle = element_text(size = 12, family = "mono", hjust = .5))
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "", y = "Count", caption = "Mushroom Data Set", subtitle = "How many are Poisonous?") + theme(plot.title = element_text(size = 16, face = "bold", family = "mono", hjust = .5), plot.subtitle = element_text(size = 12, family = "mono", hjust = .5))
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "", y = "Count", caption = "Data:Mushroom Data Set", subtitle = "How many are Poisonous?", color = "Poisonous") + theme(plot.title = element_text(size = 16, face = "bold", family = "mono", hjust = .5), plot.subtitle = element_text(size = 12, family = "mono", hjust = .5))
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "", y = "Count", caption = "Data:Mushroom Data Set", subtitle = "How many are Poisonous?") + theme(plot.title = element_text(size = 16, face = "bold", family = "mono", hjust = .5), plot.subtitle = element_text(size = 12, family = "mono", hjust = .5)) + labs(color = "Poisonous")
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "", y = "Count", caption = "Data:Mushroom Data Set", subtitle = "How many are Poisonous?") + theme(plot.title = element_text(size = 16, face = "bold", family = "mono", hjust = .5), plot.subtitle = element_text(size = 12, family = "mono", hjust = .5)) + labs(fill = "Poisonous")
library(FFTrees)
library(ggplot2)
library(scales)
df <- mushrooms
ggplot(df, aes(poisonous, fill = poisonous)) + geom_bar() + scale_fill_brewer(palette="Dark2") + labs(title = "Count of Poisonous and Non Poisonous Mushrooms", x = "", y = "Count", caption = "Data:Mushroom Data Set", subtitle = "How many are Poisonous?") + theme(plot.title = element_text(size = 16, face = "bold", family = "mono", hjust = .5), plot.subtitle = element_text(size = 12, family = "mono", hjust = .5)) + labs(fill = "Poisonous") + scale_y_continuous(labels = comma)
plot(model,
which = "cues")
plot(model,
what = "cues")
pred <- predict(model, test)
plot(pred)
table(test$poisonous, pred)
pred <- predict(model, test)
table(Actual = test$poisonous, Model =  pred)
2095+1686
table(Actual = test$poisonous, Model =  pred)
2095+1686/3781+281
2095+1686
3781/4062
setwd("C:/Users/cshockley/Desktop/WEBSITE_BLOG")
library(blogdown)
serve_site()
serve_site()
knitr::opts_chunk$set(echo = TRUE)
pred <- predict(model, test)
table(Actual = test$poisonous, Model =  pred)
set.seed(123)
rows <- sample(nrow(mushrooms), nrow(mushrooms) *.5, replace = F)
train <- mushrooms[rows,]
test <- mushrooms[-rows,]
model <- FFTrees(poisonous ~ ., train)
plot(model)
